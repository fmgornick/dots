(undo-tree-save-format-version . 1)
"e0b4343aae6aa716497882941882f3e3c20a3ee6"
[nil nil nil nil (25903 13799 301792 0) 0 (:visualizer [1 0 1 #<marker in no buffer>])]
([nil nil ((222 . 227) (t 25903 13651 613319 235000)) nil (25903 13799 301791 0) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("i" 0 1 (fontified t)) . -226) (undo-tree-id5 . -1) 227) nil (25903 13799 301789 0) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((226 . 237)) nil (25903 13799 301787 0) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("undo-tree-mode" 0 14 (fontified t)) . 223) (undo-tree-id0 . -14) (undo-tree-id1 . -14) (undo-tree-id2 . -14) (undo-tree-id3 . -14) (undo-tree-id4 . -13)) nil (25903 13799 301785 0) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((223 . 225) (#("\"" 0 1 (fontified nil)) . -223) (223 . 224)) nil (25903 13799 301763 0) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("\"\"" 0 2 (face font-lock-string-face fontified t)) . 223) (undo-tree-id133 . -1) (t 25903 13799 305549 819000)) nil (25903 13844 645085 0) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#(" " 0 1 (fontified t)) . 222)) nil (25903 13844 645083 0) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((299 . 371) (#("
" 0 1 (fontified nil)) . 299) (undo-tree-id128 . -1) (#("(use-package drag-stuff
	:diminish
	:config (drag-stuff-global-mode 1))" 0 1 (fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 23 (face font-lock-constant-face fontified t) 23 25 (fontified t) 25 34 (face font-lock-builtin-face fontified t) 34 36 (fontified t) 36 43 (face font-lock-builtin-face fontified t) 43 71 (fontified t)) . 299) (undo-tree-id129 . -10) (undo-tree-id130 . -10) (undo-tree-id131 . -44) (undo-tree-id132 . -44) 371) nil (25903 13844 645082 0) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((354 . 426) (#("
" 0 1 (fontified nil)) . 300) (#("(use-package drag-stuff
	:diminish
	:config (drag-stuff-global-mode 1))" 0 1 (fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 23 (face font-lock-constant-face fontified t) 23 25 (fontified t) 25 34 (face font-lock-builtin-face fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 43 (face font-lock-builtin-face fontified t) 43 71 (fontified t)) . 300) (undo-tree-id124 . -10) (undo-tree-id125 . -10) (undo-tree-id126 . -44) (undo-tree-id127 . -44) 372) nil (25903 13844 645075 0) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((300 . 372) (#("
" 0 1 (face font-lock-comment-face fontified t)) . -354) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (#("(use-package drag-stuff
	:diminish
	:config (drag-stuff-global-mode 1))" 0 1 (fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 23 (face font-lock-constant-face fontified t) 23 25 (fontified t) 25 34 (face font-lock-builtin-face fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 43 (face font-lock-builtin-face fontified t) 43 71 (fontified t)) . 355) (undo-tree-id120 . -10) (undo-tree-id121 . -10) (undo-tree-id122 . -44) (undo-tree-id123 . -44) 427) nil (25903 13844 645068 0) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((299 . 371) (#("
" 0 1 (fontified t)) . -299) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#("(use-package drag-stuff
	:diminish
	:config (drag-stuff-global-mode 1))" 0 1 (fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 23 (face font-lock-constant-face fontified t) 23 25 (fontified t) 25 34 (face font-lock-builtin-face fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 43 (face font-lock-builtin-face fontified t) 43 71 (fontified t)) . 300) (undo-tree-id111 . -10) (undo-tree-id112 . -10) (undo-tree-id113 . -44) (undo-tree-id114 . -44) 372) nil (25903 13844 645057 0) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((298 . 370) (#("
" 0 1 (fontified t)) . -298) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (#("(use-package drag-stuff
	:diminish
	:config (drag-stuff-global-mode 1))" 0 1 (fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 23 (face font-lock-constant-face fontified t) 23 25 (fontified t) 25 34 (face font-lock-builtin-face fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 43 (face font-lock-builtin-face fontified t) 43 71 (fontified t)) . 299) (undo-tree-id102 . -10) (undo-tree-id103 . -10) (undo-tree-id104 . -44) (undo-tree-id105 . -44) 371) nil (25903 13844 645046 0) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((298 . 370) (#("
" 0 1 (fontified nil)) . 298) (#("(use-package drag-stuff
	:diminish
	:config (drag-stuff-global-mode 1))" 0 1 (fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 23 (face font-lock-constant-face fontified t) 23 25 (fontified t) 25 34 (face font-lock-builtin-face fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 43 (face font-lock-builtin-face fontified t) 43 71 (fontified t)) . 298) (undo-tree-id91 . -10) (undo-tree-id92 . -10) (undo-tree-id93 . -44) (undo-tree-id94 . -44) 370) nil (25903 13844 645029 0) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((299 . 371) (#("
" 0 1 (fontified nil)) . 299) (#("(use-package drag-stuff
	:diminish
	:config (drag-stuff-global-mode 1))" 0 1 (fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 23 (face font-lock-constant-face fontified t) 23 25 (fontified t) 25 34 (face font-lock-builtin-face fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 43 (face font-lock-builtin-face fontified t) 43 71 (fontified t)) . 299) (undo-tree-id87 . -10) (undo-tree-id88 . -10) (undo-tree-id89 . -44) (undo-tree-id90 . -44) 371) nil (25903 13844 645022 0) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((354 . 426) (#("
" 0 1 (fontified nil)) . 300) (#("(use-package drag-stuff
	:diminish
	:config (drag-stuff-global-mode 1))" 0 1 (fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 23 (face font-lock-constant-face fontified t) 23 25 (fontified t) 25 34 (face font-lock-builtin-face fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 43 (face font-lock-builtin-face fontified t) 43 71 (fontified t)) . 300) (undo-tree-id83 . -10) (undo-tree-id84 . -10) (undo-tree-id85 . -44) (undo-tree-id86 . -44) 372) nil (25903 13844 645017 0) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((415 . 487) (#("
" 0 1 (fontified nil)) . 355) (#("(use-package drag-stuff
	:diminish
	:config (drag-stuff-global-mode 1))" 0 1 (fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 23 (face font-lock-constant-face fontified t) 23 25 (fontified t) 25 34 (face font-lock-builtin-face fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 43 (face font-lock-builtin-face fontified t) 43 71 (fontified t)) . 355) (undo-tree-id79 . -10) (undo-tree-id80 . -10) (undo-tree-id81 . -44) (undo-tree-id82 . -44) 427) nil (25903 13844 645008 0) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((478 . 550) (#("
" 0 1 (fontified nil)) . 416) (#("(use-package drag-stuff
	:diminish
	:config (drag-stuff-global-mode 1))" 0 1 (fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 23 (face font-lock-constant-face fontified t) 23 25 (fontified t) 25 34 (face font-lock-builtin-face fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 43 (face font-lock-builtin-face fontified t) 43 71 (fontified t)) . 416) (undo-tree-id75 . -10) (undo-tree-id76 . -10) (undo-tree-id77 . -44) (undo-tree-id78 . -44) 488) nil (25903 13844 645002 0) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((542 . 614) (#("
" 0 1 (fontified nil)) . 479) (#("(use-package drag-stuff
	:diminish
	:config (drag-stuff-global-mode 1))" 0 1 (fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 23 (face font-lock-constant-face fontified t) 23 25 (fontified t) 25 34 (face font-lock-builtin-face fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 43 (face font-lock-builtin-face fontified t) 43 71 (fontified t)) . 479) (undo-tree-id71 . -10) (undo-tree-id72 . -10) (undo-tree-id73 . -44) (undo-tree-id74 . -44) 551) nil (25903 13844 644996 0) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((605 . 677) (#("
" 0 1 (fontified nil)) . 543) (#("(use-package drag-stuff
	:diminish
	:config (drag-stuff-global-mode 1))" 0 1 (fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 23 (face font-lock-constant-face fontified t) 23 25 (fontified t) 25 34 (face font-lock-builtin-face fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 43 (face font-lock-builtin-face fontified t) 43 71 (fontified t)) . 543) (undo-tree-id67 . -10) (undo-tree-id68 . -10) (undo-tree-id69 . -44) (undo-tree-id70 . -44) 615) nil (25903 13844 644990 0) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((543 . 615) (#("
" 0 1 (fontified t)) . -605) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("(use-package drag-stuff
	:diminish
	:config (drag-stuff-global-mode 1))" 0 1 (fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 23 (face font-lock-constant-face fontified t) 23 25 (fontified t) 25 34 (face font-lock-builtin-face fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 43 (face font-lock-builtin-face fontified t) 43 71 (fontified t)) . 606) (undo-tree-id63 . -10) (undo-tree-id64 . -10) (undo-tree-id65 . -44) (undo-tree-id66 . -44) 678) nil (25903 13844 644980 0) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((479 . 551) (#("
" 0 1 (fontified t)) . -542) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("(use-package drag-stuff
	:diminish
	:config (drag-stuff-global-mode 1))" 0 1 (fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 23 (face font-lock-constant-face fontified t) 23 25 (fontified t) 25 34 (face font-lock-builtin-face fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 43 (face font-lock-builtin-face fontified t) 43 71 (fontified t)) . 543) (undo-tree-id54 . -10) (undo-tree-id55 . -10) (undo-tree-id56 . -44) (undo-tree-id57 . -44) 615) nil (25903 13844 644963 0) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((416 . 488) (#("
" 0 1 (fontified t)) . -478) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("(use-package drag-stuff
	:diminish
	:config (drag-stuff-global-mode 1))" 0 1 (fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 23 (face font-lock-constant-face fontified t) 23 25 (fontified t) 25 34 (face font-lock-builtin-face fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 43 (face font-lock-builtin-face fontified t) 43 71 (fontified t)) . 479) (undo-tree-id44 . -10) (undo-tree-id45 . -10) (undo-tree-id46 . -44) (undo-tree-id47 . -44) 551) nil (25903 13844 644951 0) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((355 . 427) (#("
" 0 1 (fontified t)) . -415) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("(use-package drag-stuff
	:diminish
	:config (drag-stuff-global-mode 1))" 0 1 (fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 23 (face font-lock-constant-face fontified t) 23 25 (fontified t) 25 34 (face font-lock-builtin-face fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 43 (face font-lock-builtin-face fontified t) 43 71 (fontified t)) . 416) (undo-tree-id34 . -10) (undo-tree-id35 . -10) (undo-tree-id36 . -44) (undo-tree-id37 . -44) 488) nil (25903 13844 644937 0) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((300 . 372) (#("
" 0 1 (face font-lock-comment-face fontified t)) . -354) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("(use-package drag-stuff
	:diminish
	:config (drag-stuff-global-mode 1))" 0 1 (fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 23 (face font-lock-constant-face fontified t) 23 25 (fontified t) 25 34 (face font-lock-builtin-face fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 43 (face font-lock-builtin-face fontified t) 43 71 (fontified t)) . 355) (undo-tree-id24 . -10) (undo-tree-id25 . -10) (undo-tree-id26 . -44) (undo-tree-id27 . -44) 427) nil (25903 13844 701822 0) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((299 . 371) (#("
" 0 1 (fontified t)) . -299) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (#("(use-package drag-stuff
	:diminish
	:config (drag-stuff-global-mode 1))" 0 1 (fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 23 (face font-lock-constant-face fontified t) 23 25 (fontified t) 25 34 (face font-lock-builtin-face fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 43 (face font-lock-builtin-face fontified t) 43 71 (fontified t)) . 300) (undo-tree-id150 . -35) (undo-tree-id151 . -35) (undo-tree-id152 . -35) (undo-tree-id153 . -35)) nil (25903 13928 515521 0) 0 (:visualizer [0 1 0 #<marker in no buffer>])] [nil nil ((299 . 371) (#("
" 0 1 (fontified t)) . -299) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("(use-package drag-stuff
	:diminish
	:config (drag-stuff-global-mode 1))" 0 1 (fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 23 (face font-lock-constant-face fontified t) 23 25 (fontified t) 25 34 (face font-lock-builtin-face fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 43 (face font-lock-builtin-face fontified t) 43 71 (fontified t)) . 300) (undo-tree-id14 . -10) (undo-tree-id15 . -10) (undo-tree-id16 . -44) (undo-tree-id17 . -44) 372) ((299 . 371) (#("(use-package drag-stuff
	:diminish
	:config (drag-stuff-global-mode 1))
" 0 1 (fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 23 (face font-lock-constant-face fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 34 (face font-lock-builtin-face fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 43 (face font-lock-builtin-face fontified t) 43 71 (fontified t) 71 72 (fontified t)) . 299) (undo-tree-id134 . -10) (undo-tree-id135 . -10) (undo-tree-id136 . -44) (undo-tree-id137 . -33) (undo-tree-id138 . -10) (undo-tree-id139 . -10)) (25903 13844 645275 0) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((677 . 678) (t 25903 13849 428572 701000)) ((#("
" 0 1 (fontified t)) . 677) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1)) (25903 13933 495532 0) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((332 . 333) (#("	" 0 1 (fontified nil)) . 332) (#("
" 0 1 (fontified t)) . -332) (undo-tree-id6 . -1) (322 . 323) (#("	" 0 1 (fontified nil)) . 322) (#("
" 0 1 (fontified t)) . -322) (undo-tree-id7 . -1) 309) ((322 . 323) (322 . 323) (#(" " 0 1 (fontified nil)) . 322) (332 . 333) (332 . 333) (#(" " 0 1 (fontified t)) . 332)) (25903 13844 644900 0) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((nil rear-nonsticky nil 678 . 679) (#("
" 0 1 (fontified nil)) . 929) (678 . 930)) ((#("
(evil-define-key 'visual global-map (kbd \"K\") 'fmg/shift-up)
(evil-define-key 'visual global-map (kbd \"J\") 'fmg/shift-down)
(evil-define-key 'visual global-map (kbd \">\") 'fmg/shift-right)
(evil-define-key 'visual global-map (kbd \"<\") 'fmg/shift-left)
" 0 1 (rear-nonsticky nil fontified nil) 1 2 (fontified nil) 2 17 (face font-lock-keyword-face fontified nil) 17 42 (fontified nil) 42 43 (face font-lock-string-face fontified nil) 43 44 (face font-lock-string-face fontified nil) 44 45 (face font-lock-string-face fontified nil) 45 61 (fontified nil) 61 62 (fontified nil) 62 63 (fontified t) 63 78 (face font-lock-keyword-face fontified t) 78 103 (fontified t) 103 104 (face font-lock-string-face fontified t) 104 105 (face font-lock-string-face fontified t) 105 106 (face font-lock-string-face fontified t) 106 124 (fontified t) 124 125 (fontified t) 125 126 (fontified t) 126 141 (face font-lock-keyword-face fontified t) 141 166 (fontified t) 166 167 (face font-lock-string-face fontified t) 167 168 (face font-lock-string-face fontified t) 168 169 (face font-lock-string-face fontified t) 169 188 (fontified t) 188 189 (fontified t) 189 190 (fontified nil) 190 205 (face font-lock-keyword-face fontified nil) 205 230 (fontified nil) 230 231 (face font-lock-string-face fontified nil) 231 232 (face font-lock-string-face fontified nil) 232 233 (face font-lock-string-face fontified nil) 233 251 (fontified nil) 251 252 (fontified nil)) . 678) (undo-tree-id170 . -1) (undo-tree-id171 . -251) (undo-tree-id172 . -251) (undo-tree-id173 . -251) (undo-tree-id174 . -1) (929 . 930) (nil rear-nonsticky t 678 . 679)) (25903 14120 991631 0) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
nil
([nil nil ((551 . 614) (#("
" 0 1 (fontified t)) . -614) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (#("(evil-define-key 'visual global-map (kbd \"<\") 'fmg/shift-left)" 0 1 (fontified t) 1 16 (face font-lock-keyword-face fontified t) 16 41 (fontified t) 41 44 (face font-lock-string-face fontified t) 44 62 (fontified t)) . 615) (undo-tree-id450 . -44) (undo-tree-id451 . -44) (undo-tree-id452 . -44) (undo-tree-id453 . -62) (undo-tree-id454 . -44) 678) nil (25903 14188 432581 0) 0 nil] [nil nil ((#("fmg/shift" 0 9 (fontified nil)) . 902) (#("fmg/shift" 0 9 (fontified nil)) . 846) (#("fmg/shift" 0 9 (fontified nil)) . 788) (#("fmg/shift" 0 9 (fontified nil)) . 730) (427 . 553) (#("
(evil-define-key 'visual global-map (kbd \"<\") 'fmg/shift-left)
(evil-define-key 'visual global-map (kbd \"J\") 'fmg/shift-down)" 0 1 (fontified t) 1 2 (fontified nil) 2 17 (face font-lock-keyword-face fontified nil) 17 42 (fontified nil) 42 45 (face font-lock-string-face fontified nil) 45 63 (fontified nil) 63 64 (fontified nil) 64 65 (fontified nil) 65 80 (face font-lock-keyword-face fontified nil) 80 105 (fontified nil) 105 108 (face font-lock-string-face fontified nil) 108 126 (fontified nil)) . 487) (undo-tree-id351 . -126) (undo-tree-id352 . -126) (undo-tree-id353 . -126) (488 . 551) (#("
(evil-define-key 'visual global-map (kbd \"<\") 'fmg/shift-left)" 0 1 (fontified t) 1 2 (fontified nil) 2 17 (face font-lock-keyword-face fontified nil) 17 42 (fontified nil) 42 45 (face font-lock-string-face fontified nil) 45 63 (fontified nil)) . 550) (551 . 614) (#("
(evil-define-key 'visual global-map (kbd \"<\") 'fmg/shift-left)" 0 1 (fontified t) 1 2 (fontified t) 2 17 (face font-lock-keyword-face fontified t) 17 42 (fontified t) 42 45 (face font-lock-string-face fontified t) 45 63 (fontified t)) . 614) (undo-tree-id354 . -63) (undo-tree-id355 . -1) (939 . 944) (#("left" 0 4 (fontified nil)) . 939) (874 . 876) (#("up" 0 2 (fontified nil)) . 874) (807 . 811) (#("down" 0 4 (fontified nil)) . 807) (740 . 744) (#("right" 0 5 (fontified nil)) . 740) (undo-tree-id356 . -5) (undo-tree-id357 . -5) (679 . 814) (#("
(evil-define-key 'visual global-map (kbd \"<C-H>\") 'fmg/shift-right)
(evil-define-key 'visual global-map (kbd \"<C-J>\") 'fmg/shift-down)" 0 1 (fontified nil) 1 2 (fontified nil) 2 17 (face font-lock-keyword-face fontified nil) 17 42 (fontified nil) 42 49 (face font-lock-string-face fontified nil) 49 68 (fontified nil) 68 69 (fontified nil) 69 70 (fontified nil) 70 85 (face font-lock-keyword-face fontified nil) 85 110 (fontified nil) 110 114 (face font-lock-string-face fontified nil) 114 115 (face font-lock-string-face fontified nil) 115 116 (face font-lock-string-face fontified nil) 116 117 (face font-lock-string-face fontified nil) 117 135 (fontified nil)) . 743) (undo-tree-id358 . -135) (undo-tree-id359 . -135) (undo-tree-id360 . -135) (undo-tree-id361 . -135) (undo-tree-id362 . -135) (undo-tree-id363 . -135) (undo-tree-id364 . -135) (undo-tree-id365 . -135) (undo-tree-id366 . -135) (undo-tree-id367 . -135) (undo-tree-id368 . -135) (undo-tree-id369 . -135) (undo-tree-id370 . -1) (undo-tree-id371 . -68) (undo-tree-id372 . -47) (undo-tree-id373 . -47) (744 . 812) (#("
(evil-define-key 'visual global-map (kbd \"<C-H>\") 'fmg/shift-right)" 0 1 (fontified nil) 1 2 (fontified nil) 2 17 (face font-lock-keyword-face fontified nil) 17 42 (fontified nil) 42 46 (face font-lock-string-face fontified nil) 46 47 (face font-lock-string-face fontified nil) 47 48 (face font-lock-string-face fontified nil) 48 49 (face font-lock-string-face fontified nil) 49 68 (fontified nil)) . 810) (undo-tree-id374 . -68) (undo-tree-id375 . -68) (undo-tree-id376 . -67) (undo-tree-id377 . -67) (undo-tree-id378 . -46) (undo-tree-id379 . -46) (undo-tree-id380 . -46) (undo-tree-id381 . -47) (undo-tree-id382 . -47) (undo-tree-id383 . -47) (undo-tree-id384 . -47) (924 . 925) (856 . 857) (#("<" 0 1 (face font-lock-string-face fontified nil)) . 923) (#(">" 0 1 (face font-lock-string-face fontified nil)) . 856) (#("bb==" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 878) (878 . 882) (#("\"<\"" 0 1 (face font-lock-string-face fontified nil) 1 2 (face font-lock-string-face fontified nil) 2 3 (face font-lock-string-face fontified nil)) . 920) (923 . 930) (#("\">\"" 0 1 (face font-lock-string-face fontified nil) 1 2 (face font-lock-string-face fontified nil) 2 3 (face font-lock-string-face fontified nil)) . 852) (855 . 862) (#("\"J\"" 0 1 (face font-lock-string-face fontified nil) 1 2 (face font-lock-string-face fontified nil) 2 3 (face font-lock-string-face fontified nil)) . 785) (788 . 795) (#("\"K\"" 0 1 (face font-lock-string-face fontified nil) 1 2 (face font-lock-string-face fontified nil) 2 3 (face font-lock-string-face fontified nil)) . 720) (undo-tree-id385 . -3) (undo-tree-id386 . -3) (undo-tree-id387 . -3) (undo-tree-id388 . -3) (723 . 730)) ((#("\"<C-K>\"" 0 4 (face font-lock-string-face fontified nil) 4 5 (face font-lock-string-face fontified nil) 5 6 (face font-lock-string-face fontified nil) 6 7 (face font-lock-string-face fontified nil)) . 723) (720 . 723) (#("\"<C-J>\"" 0 4 (face font-lock-string-face fontified nil) 4 5 (face font-lock-string-face fontified nil) 5 6 (face font-lock-string-face fontified nil) 6 7 (face font-lock-string-face fontified nil)) . 788) (785 . 788) (#("\"<C->>\"" 0 4 (face font-lock-string-face fontified nil) 4 5 (face font-lock-string-face fontified nil) 5 6 (face font-lock-string-face fontified nil) 6 7 (face font-lock-string-face fontified nil)) . 855) (undo-tree-id389 . -4) (undo-tree-id390 . -4) (undo-tree-id391 . -4) (undo-tree-id392 . -4) (undo-tree-id393 . -4) (undo-tree-id394 . -4) (undo-tree-id395 . -4) (852 . 855) (#("\"<C-<>\"" 0 4 (face font-lock-string-face fontified nil) 4 5 (face font-lock-string-face fontified nil) 5 6 (face font-lock-string-face fontified nil) 6 7 (face font-lock-string-face fontified nil)) . 923) (920 . 923) (#("bb==" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 878) (878 . 882) (856 . 857) (923 . 924) (#("H" 0 1 (face font-lock-string-face fontified nil)) . 856) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (#("L" 0 1 (face font-lock-string-face fontified nil)) . 924) (810 . 878) (#("(evil-define-key 'visual global-map (kbd \"<C-H>\") 'fmg/shift-right)
" 0 1 (fontified nil) 1 16 (face font-lock-keyword-face fontified nil) 16 41 (fontified nil) 41 48 (face font-lock-string-face fontified nil) 48 67 (fontified nil) 67 68 (fontified nil)) . 744) (undo-tree-id400 . -67) (undo-tree-id401 . -46) (undo-tree-id402 . -46) (743 . 878) (#("(evil-define-key 'visual global-map (kbd \"<C-H>\") 'fmg/shift-right)
(evil-define-key 'visual global-map (kbd \"<C-J>\") 'fmg/shift-down)
" 0 1 (fontified nil) 1 16 (face font-lock-keyword-face fontified nil) 16 41 (fontified nil) 41 48 (face font-lock-string-face fontified nil) 48 51 (fontified nil) 51 60 (fontified nil) 60 61 (fontified nil) 61 66 (fontified nil) 66 68 (fontified nil) 68 69 (fontified nil) 69 84 (face font-lock-keyword-face fontified nil) 84 109 (fontified nil) 109 116 (face font-lock-string-face fontified nil) 116 119 (fontified nil) 119 128 (fontified nil) 128 129 (fontified nil) 129 133 (fontified nil) 133 134 (fontified nil) 134 135 (fontified nil)) . 679) (undo-tree-id403 . -51) (undo-tree-id404 . -51) (undo-tree-id405 . 69) (undo-tree-id406 . -51) (undo-tree-id407 . -51) (undo-tree-id408 . -51) (undo-tree-id409 . -66) (undo-tree-id410 . -66) (undo-tree-id411 . -51) (undo-tree-id412 . -51) (740 . 745) (#("left" 0 4 (fontified nil)) . 740) (undo-tree-id413 . 4) (807 . 811) (#("down" 0 4 (fontified nil)) . 807) (874 . 876) (#("up" 0 2 (fontified nil)) . 874) (939 . 943) (#("right" 0 5 (fontified nil)) . 939) (614 . 677) (#("(evil-define-key 'visual global-map (kbd \"<\") 'fmg/shift-left)
" 0 1 (fontified nil) 1 16 (face font-lock-keyword-face fontified nil) 16 41 (fontified nil) 41 44 (face font-lock-string-face fontified nil) 44 62 (fontified nil) 62 63 (fontified nil)) . 551) (550 . 613) (#("(evil-define-key 'visual global-map (kbd \"<\") 'fmg/shift-left)
" 0 1 (fontified nil) 1 16 (face font-lock-keyword-face fontified nil) 16 41 (fontified nil) 41 44 (face font-lock-string-face fontified nil) 44 62 (fontified nil) 62 63 (fontified nil)) . 488) (487 . 613) (#("(evil-define-key 'visual global-map (kbd \"<\") 'fmg/shift-left)
(evil-define-key 'visual global-map (kbd \"J\") 'fmg/shift-down)
" 0 1 (fontified t) 1 16 (face font-lock-keyword-face fontified t) 16 41 (fontified t) 41 44 (face font-lock-string-face fontified t) 44 63 (fontified t) 63 64 (fontified t) 64 79 (face font-lock-keyword-face fontified t) 79 104 (fontified t) 104 107 (face font-lock-string-face fontified t) 107 125 (fontified t) 125 126 (fontified t)) . 427) (730 . 739) (788 . 797) (846 . 855) (902 . 911)) (25903 14117 116709 0) 0 nil] [nil nil ((apply activate-cursor-for-undo 9) (#(">" 0 1 (face font-lock-string-face fontified t)) . 843) (apply deactivate-cursor-after-undo 9) (apply activate-cursor-for-undo 10) (#("J" 0 1 (face font-lock-string-face fontified t)) . 781) (apply deactivate-cursor-after-undo 10) (apply activate-cursor-for-undo 11) (#("K" 0 1 (face font-lock-string-face fontified t)) . 721) (apply deactivate-cursor-after-undo 11) (#("<" 0 1 (face font-lock-string-face fontified t)) . 909)) ((909 . 910) (721 . 722) (781 . 782) (843 . 844)) (25903 13994 886999 0) 0 nil] [nil nil ((apply activate-cursor-for-undo 7) (#("<" 0 1 (face font-lock-string-face fontified t)) . 906) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (#(">" 0 1 (face font-lock-string-face fontified t)) . 843) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (#("J" 0 1 (face font-lock-string-face fontified t)) . 781) (apply deactivate-cursor-after-undo 5) (#("K" 0 1 (face font-lock-string-face fontified t)) . 721)) ((721 . 722) (781 . 782) (843 . 844) (906 . 907)) (25903 13921 881187 0) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((488 . 551) (#("
" 0 1 (fontified t)) . -550) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (#("(evil-define-key 'visual global-map (kbd \"<\") 'fmg/shift-left)" 0 1 (fontified t) 1 16 (face font-lock-keyword-face fontified t) 16 41 (fontified t) 41 44 (face font-lock-string-face fontified t) 44 62 (fontified t)) . 551) (undo-tree-id439 . -44) (undo-tree-id440 . -44) (undo-tree-id441 . -44) (undo-tree-id442 . -44) 614) nil (25903 14188 432566 0) 0 nil])
([nil nil ((730 . 741)) ((#("evil-window" 0 11 (fontified t)) . 730) (undo-tree-id320 . -11) (undo-tree-id321 . -11) (undo-tree-id322 . -11) (undo-tree-id323 . -11)) (25903 14110 282830 0) 0 nil])
([nil nil ((906 . 907)) ((#("u" 0 1 (face font-lock-string-face fontified t)) . 906) (undo-tree-id177 . -1) (undo-tree-id178 . -1)) (25903 13994 263463 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 7) (917 . 918) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (851 . 852) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (786 . 787) (apply deactivate-cursor-after-undo 5) (723 . 724) (apply activate-cursor-for-undo 7) (913 . 914) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (848 . 849) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (784 . 785) (apply deactivate-cursor-after-undo 5) (722 . 723) (apply activate-cursor-for-undo 7) (909 . 910) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (845 . 846) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (782 . 783) (apply deactivate-cursor-after-undo 5) (721 . 722)) ((#("<" 0 1 (face font-lock-string-face fontified nil)) . 721) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (#("<" 0 1 (face font-lock-string-face fontified nil)) . 782) (#("<" 0 1 (face font-lock-string-face fontified nil)) . 845) (#("<" 0 1 (face font-lock-string-face fontified nil)) . 909) (#("C" 0 1 (face font-lock-string-face fontified nil)) . 722) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (#("C" 0 1 (face font-lock-string-face fontified nil)) . 784) (#("C" 0 1 (face font-lock-string-face fontified nil)) . 848) (#("C" 0 1 (face font-lock-string-face fontified nil)) . 913) (#("-" 0 1 (face font-lock-string-face fontified t)) . 723) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (#("-" 0 1 (face font-lock-string-face fontified t)) . 786) (#("-" 0 1 (face font-lock-string-face fontified t)) . 851) (#("-" 0 1 (face font-lock-string-face fontified t)) . 917)) (25903 13918 807881 0) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((427 . 553) (#("
" 0 1 (fontified t)) . -487) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (#("(evil-define-key 'visual global-map (kbd \"<\") 'fmg/shift-left)
(evil-define-key 'visual global-map (kbd \"J\") 'fmg/shift-down)" 0 1 (fontified t) 1 16 (face font-lock-keyword-face fontified t) 16 41 (fontified t) 41 44 (face font-lock-string-face fontified t) 44 62 (fontified t) 62 63 (fontified t) 63 64 (fontified t) 64 79 (face font-lock-keyword-face fontified t) 79 104 (fontified t) 104 107 (face font-lock-string-face fontified t) 107 125 (fontified t)) . 488) (undo-tree-id426 . -44) (undo-tree-id427 . -44) (undo-tree-id428 . -107) (undo-tree-id429 . -125) (undo-tree-id430 . -125) (undo-tree-id431 . -107) (undo-tree-id432 . -125) (undo-tree-id433 . -125) 614) nil (25903 14188 432552 0) 0 nil])
nil
([nil nil ((#("u" 0 1 (face font-lock-string-face fontified t)) . -906) (undo-tree-id175 . -1) (undo-tree-id176 . -1) 907) ((906 . 907)) (25903 13994 263384 0) 0 nil])
nil
([nil nil ((726 . 727)) nil (25903 14188 432535 0) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . -726) (undo-tree-id415 . -1) (undo-tree-id416 . -1) 727) nil (25903 14188 432534 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 19) (#("fmg/shif" 0 8 (fontified t)) . 890) (apply deactivate-cursor-after-undo 19) (apply activate-cursor-for-undo 18) (#("fmg/shif" 0 8 (fontified t)) . 834) (apply deactivate-cursor-after-undo 18) (apply activate-cursor-for-undo 17) (#("fmg/shif" 0 8 (fontified t)) . 779) (apply deactivate-cursor-after-undo 17) (#("fmg/shif" 0 8 (fontified t)) . 726) (undo-tree-id414 . -8) 734) nil (25903 14188 432529 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 19) (#("t" 0 1 (fontified t)) . 887) (apply deactivate-cursor-after-undo 19) (apply activate-cursor-for-undo 18) (#("t" 0 1 (fontified t)) . 832) (apply deactivate-cursor-after-undo 18) (apply activate-cursor-for-undo 17) (#("t" 0 1 (fontified t)) . 778) (apply deactivate-cursor-after-undo 17) (#("t" 0 1 (fontified t)) . 726)) nil (25903 14188 432518 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 19) (930 . 931) (apply deactivate-cursor-after-undo 19) (apply activate-cursor-for-undo 18) (864 . 865) (apply deactivate-cursor-after-undo 18) (apply activate-cursor-for-undo 17) (799 . 800) (apply deactivate-cursor-after-undo 17) (736 . 737) (apply activate-cursor-for-undo 19) (926 . 927) (apply deactivate-cursor-after-undo 19) (apply activate-cursor-for-undo 18) (861 . 862) (apply deactivate-cursor-after-undo 18) (apply activate-cursor-for-undo 17) (797 . 798) (apply deactivate-cursor-after-undo 17) (735 . 736) (apply activate-cursor-for-undo 19) (922 . 923) (apply deactivate-cursor-after-undo 19) (apply activate-cursor-for-undo 18) (858 . 859) (apply deactivate-cursor-after-undo 18) (apply activate-cursor-for-undo 17) (795 . 796) (apply deactivate-cursor-after-undo 17) (734 . 735) (apply activate-cursor-for-undo 19) (918 . 919) (apply deactivate-cursor-after-undo 19) (apply activate-cursor-for-undo 18) (855 . 856) (apply deactivate-cursor-after-undo 18) (apply activate-cursor-for-undo 17) (793 . 794) (apply deactivate-cursor-after-undo 17) (733 . 734) (apply activate-cursor-for-undo 19) (914 . 915) (apply deactivate-cursor-after-undo 19) (apply activate-cursor-for-undo 18) (852 . 853) (apply deactivate-cursor-after-undo 18) (apply activate-cursor-for-undo 17) (791 . 792) (apply deactivate-cursor-after-undo 17) (732 . 733) (apply activate-cursor-for-undo 19) (910 . 911) (apply deactivate-cursor-after-undo 19) (apply activate-cursor-for-undo 18) (849 . 850) (apply deactivate-cursor-after-undo 18) (apply activate-cursor-for-undo 17) (789 . 790) (apply deactivate-cursor-after-undo 17) (731 . 732) (apply activate-cursor-for-undo 19) (906 . 907) (apply deactivate-cursor-after-undo 19) (apply activate-cursor-for-undo 18) (846 . 847) (apply deactivate-cursor-after-undo 18) (apply activate-cursor-for-undo 17) (787 . 788) (apply deactivate-cursor-after-undo 17) (730 . 731) (apply activate-cursor-for-undo 19) (902 . 903) (apply deactivate-cursor-after-undo 19) (apply activate-cursor-for-undo 18) (843 . 844) (apply deactivate-cursor-after-undo 18) (apply activate-cursor-for-undo 17) (785 . 786) (apply deactivate-cursor-after-undo 17) (729 . 730) (apply activate-cursor-for-undo 19) (898 . 899) (apply deactivate-cursor-after-undo 19) (apply activate-cursor-for-undo 18) (840 . 841) (apply deactivate-cursor-after-undo 18) (apply activate-cursor-for-undo 17) (783 . 784) (apply deactivate-cursor-after-undo 17) (728 . 729) (apply activate-cursor-for-undo 19) (894 . 895) (apply deactivate-cursor-after-undo 19) (apply activate-cursor-for-undo 18) (837 . 838) (apply deactivate-cursor-after-undo 18) (apply activate-cursor-for-undo 17) (781 . 782) (apply deactivate-cursor-after-undo 17) (727 . 728) (apply activate-cursor-for-undo 19) (890 . 891) (apply deactivate-cursor-after-undo 19) (apply activate-cursor-for-undo 18) (834 . 835) (apply deactivate-cursor-after-undo 18) (apply activate-cursor-for-undo 17) (779 . 780) (apply deactivate-cursor-after-undo 17) (726 . 727)) nil (25903 14188 432508 0) 0 nil])
([nil nil ((678 . 679) 678 (947 . 952) (#("left" 0 4 (fontified t)) . 947) (undo-tree-id457 . -3) (742 . 746) (#("right" 0 5 (fontified t)) . 742) (undo-tree-id458 . -4) (undo-tree-id459 . -5) (undo-tree-id460 . -5) (undo-tree-id461 . -5) (undo-tree-id462 . -5) (679 . 818) (#("
" 0 1 (fontified t)) . -745) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (#("(evil-define-key 'visual global-map (kbd \"<C-H>\") 'evil-window-right)
(evil-define-key 'visual global-map (kbd \"<C-J>\") 'evil-window-down)" 0 1 (fontified t) 1 16 (face font-lock-keyword-face fontified t) 16 41 (fontified t) 41 48 (face font-lock-string-face fontified t) 48 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t) 71 86 (face font-lock-keyword-face fontified t) 86 111 (fontified t) 111 118 (face font-lock-string-face fontified t) 118 138 (fontified t)) . 746) (undo-tree-id492 . -45) (undo-tree-id493 . -45) (undo-tree-id494 . -115) (undo-tree-id495 . -138) (undo-tree-id496 . -138) (undo-tree-id497 . -138) (undo-tree-id498 . -138) (undo-tree-id499 . -138) (undo-tree-id500 . -138) (undo-tree-id501 . -138) (undo-tree-id502 . -138) (undo-tree-id503 . -138) (undo-tree-id504 . -138) (undo-tree-id505 . -138) (undo-tree-id506 . -138) (undo-tree-id507 . -115) (undo-tree-id508 . -138) (undo-tree-id509 . -138) (undo-tree-id510 . -138) (undo-tree-id511 . -69) (undo-tree-id512 . -45) (undo-tree-id513 . -45) (undo-tree-id514 . -70) 885 (746 . 816) (#("
" 0 1 (fontified t)) . -814) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (#("(evil-define-key 'visual global-map (kbd \"<C-H>\") 'evil-window-right)" 0 1 (fontified t) 1 16 (face font-lock-keyword-face fontified t) 16 41 (fontified t) 41 45 (face font-lock-string-face fontified t) 45 46 (face font-lock-string-face fontified t) 46 48 (face font-lock-string-face fontified t) 48 69 (fontified t)) . 815) (undo-tree-id534 . -45) (undo-tree-id535 . -45) (undo-tree-id536 . -45) (undo-tree-id537 . -69) (undo-tree-id538 . -69) (undo-tree-id539 . -68) (undo-tree-id540 . -68) (undo-tree-id541 . -48) (undo-tree-id542 . -48) (undo-tree-id543 . -48) (undo-tree-id544 . -48) (undo-tree-id545 . -48) (undo-tree-id546 . -48) (undo-tree-id547 . -48) (undo-tree-id548 . -45) (undo-tree-id549 . -45) (undo-tree-id550 . -45) 885 (930 . 931) (#("<" 0 1 (face font-lock-string-face fontified t)) . 930) (undo-tree-id551 . -1) (860 . 861) (#(">" 0 1 (face font-lock-string-face fontified t)) . 860) (nil fontified t 932 . 933) (nil face font-lock-string-face 932 . 933) (nil fontified t 931 . 932) (nil face font-lock-string-face 931 . 932) (nil fontified t 930 . 931) (nil face font-lock-string-face 930 . 931) (#("\"<\"" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t) 2 3 (face font-lock-string-face fontified t)) . -926) (929 . 936) (nil fontified t 862 . 863) (nil face font-lock-string-face 862 . 863) (nil fontified t 861 . 862) (nil face font-lock-string-face 861 . 862) (nil fontified t 860 . 861) (nil face font-lock-string-face 860 . 861) (#("\">\"" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t) 2 3 (face font-lock-string-face fontified t)) . -856) (859 . 866) (nil fontified t 793 . 794) (nil face font-lock-string-face 793 . 794) (nil fontified t 792 . 793) (nil face font-lock-string-face 792 . 793) (nil fontified t 791 . 792) (nil face font-lock-string-face 791 . 792) (#("\"J\"" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t) 2 3 (face font-lock-string-face fontified t)) . -787) (790 . 797) (nil fontified t 726 . 727) (t 25903 14188 438090 493000) (nil face font-lock-string-face 726 . 727) (t 25903 14188 438090 493000) (nil fontified t 725 . 726) (t 25903 14188 438090 493000) (nil face font-lock-string-face 725 . 726) (t 25903 14188 438090 493000) (nil fontified t 724 . 725) (t 25903 14188 438090 493000) (nil face font-lock-string-face 724 . 725) (t 25903 14188 438090 493000) (#("\"K\"" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t) 2 3 (face font-lock-string-face fontified t)) . -720) (t 25903 14188 438090 493000) (723 . 730) (t 25903 14188 438090 493000)) nil (25903 14255 838793 0) 0 nil])
([nil nil ((679 . 682)) nil (25903 14255 838668 0) 0 nil])
([nil nil ((682 . 703)) nil (25903 14255 838667 0) 0 nil])
([nil nil ((703 . 707)) nil (25903 14255 838666 0) 0 nil])
([nil nil ((#("gimmew " 0 7 (face font-lock-comment-face fontified t)) . 682) (undo-tree-id455 . -6) (undo-tree-id456 . -7)) nil (25903 14255 838664 0) 0 nil])
([nil nil ((700 . 705)) nil (25903 14255 838653 0) 0 nil])
([nil nil ((956 . 957) (#("L" 0 1 (face font-lock-string-face fontified t)) . 956) (889 . 890) (#("K" 0 1 (face font-lock-string-face fontified t)) . 889) (820 . 821) (#("J" 0 1 (face font-lock-string-face fontified t)) . 820) (751 . 752) (#("H" 0 1 (face font-lock-string-face fontified t)) . 751) (t 25903 14255 845495 586000)) nil (25903 14363 56431 0) 0 nil])
([nil nil ((954 . 955) (#("C" 0 1 (face font-lock-string-face fontified t)) . 954) (887 . 888) (#("C" 0 1 (face font-lock-string-face fontified t)) . 887) (818 . 819) (#("C" 0 1 (face font-lock-string-face fontified t)) . 818) (749 . 750) (#("C" 0 1 (face font-lock-string-face fontified t)) . 749) 954) nil (25903 14363 56427 0) 0 nil])
([nil nil ((730 . 731) (#(" " 0 1 (fontified t)) . 730)) nil (25903 14363 56424 0) 0 nil])
([nil nil ((731 . 732)) nil (25903 14363 56422 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -731) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) 732) nil (25903 14363 56421 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 27) (#("visual" 0 6 (fontified t)) . 911) (undo-tree-id552 . -6) (undo-tree-id553 . -6) (apply deactivate-cursor-after-undo 27) (apply activate-cursor-for-undo 26) (#("visual" 0 6 (fontified t)) . 850) (undo-tree-id554 . -6) (undo-tree-id555 . -6) (apply deactivate-cursor-after-undo 26) (apply activate-cursor-for-undo 25) (#("visual" 0 6 (fontified t)) . 787) (undo-tree-id556 . -6) (undo-tree-id557 . -6) (apply deactivate-cursor-after-undo 25) (#("visual" 0 6 (fontified t)) . 724) (undo-tree-id558 . 5) (undo-tree-id559 . -6) (undo-tree-id560 . -6) (undo-tree-id561 . -6) (undo-tree-id562 . -6) 730) nil (25903 14363 56396 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 27) (934 . 935) (apply deactivate-cursor-after-undo 27) (apply activate-cursor-for-undo 26) (867 . 868) (apply deactivate-cursor-after-undo 26) (apply activate-cursor-for-undo 25) (798 . 799) (apply deactivate-cursor-after-undo 25) (729 . 730) (apply activate-cursor-for-undo 27) (930 . 931) (apply deactivate-cursor-after-undo 27) (apply activate-cursor-for-undo 26) (864 . 865) (apply deactivate-cursor-after-undo 26) (apply activate-cursor-for-undo 25) (796 . 797) (apply deactivate-cursor-after-undo 25) (728 . 729) (apply activate-cursor-for-undo 27) (926 . 927) (apply deactivate-cursor-after-undo 27) (apply activate-cursor-for-undo 26) (861 . 862) (apply deactivate-cursor-after-undo 26) (apply activate-cursor-for-undo 25) (794 . 795) (apply deactivate-cursor-after-undo 25) (727 . 728) (apply activate-cursor-for-undo 27) (922 . 923) (apply deactivate-cursor-after-undo 27) (apply activate-cursor-for-undo 26) (858 . 859) (apply deactivate-cursor-after-undo 26) (apply activate-cursor-for-undo 25) (792 . 793) (apply deactivate-cursor-after-undo 25) (726 . 727) (apply activate-cursor-for-undo 27) (918 . 919) (apply deactivate-cursor-after-undo 27) (apply activate-cursor-for-undo 26) (855 . 856) (apply deactivate-cursor-after-undo 26) (apply activate-cursor-for-undo 25) (790 . 791) (apply deactivate-cursor-after-undo 25) (725 . 726) (apply activate-cursor-for-undo 27) (914 . 915) (apply deactivate-cursor-after-undo 27) (apply activate-cursor-for-undo 26) (852 . 853) (apply deactivate-cursor-after-undo 26) (apply activate-cursor-for-undo 25) (788 . 789) (apply deactivate-cursor-after-undo 25) (724 . 725)) nil (25903 14363 56366 0) 0 nil])
([nil nil ((954 . 955) (#("c" 0 1 (face font-lock-string-face fontified t)) . 954) (887 . 888) (#("c" 0 1 (face font-lock-string-face fontified t)) . 887) (818 . 819) (#("c" 0 1 (face font-lock-string-face fontified t)) . 818) (749 . 750) (#("c" 0 1 (face font-lock-string-face fontified t)) . 749) 954 (t 25903 14363 60866 478000)) nil (25903 14432 46646 0) 0 nil])
([nil nil ((#("<" 0 1 (face font-lock-string-face fontified t)) . 950) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (#("<" 0 1 (face font-lock-string-face fontified t)) . 884) (#("<" 0 1 (face font-lock-string-face fontified t)) . 816) (#("<" 0 1 (face font-lock-string-face fontified t)) . 748) 953) nil (25903 14432 46642 0) 0 nil])
([nil current ((#(">" 0 1 (face font-lock-string-face fontified t)) . 950) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (#(">" 0 1 (face font-lock-string-face fontified t)) . 885) (#(">" 0 1 (face font-lock-string-face fontified t)) . 818) (#(">" 0 1 (face font-lock-string-face fontified t)) . 751) 953) nil (25903 14432 46634 0) 0 nil])
nil
